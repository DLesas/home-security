{
    # Enable debug logging
    debug
    # Use local storage for certificates
    storage file_system {
        root /data/caddy
    }
    # Server settings
    servers {
        protocols h1 h2 h2c
    }
}

# HTTP listener for sensors/alarms (they typically don't support HTTPS/TLS)
:80 {
    route {
        # API routes for sensors and alarms
        handle /api/* {
            reverse_proxy backend:{$SERVER_PORT:8080} {
                header_up Host {host}
                header_up X-Real-IP {remote_host}
                header_up X-Forwarded-Port {server_port}
                
                # Trusted proxies
                trusted_proxies private_ranges
            }
        }

        # WebSocket routes
        handle /ws/* {
            reverse_proxy backend:{$SERVER_PORT:8080} {
                header_up Host {host}
                header_up X-Real-IP {remote_host}
                
                # WebSocket configuration
                transport http {
                    versions h1 h2c
                    keepalive 30s
                }
            }
        }

        # Redirect all other traffic to HTTPS
        handle {
            redir https://{host}{uri} permanent
        }
    }

    # Rate limiting for API and WebSocket
    rate_limit {
        zone api_zone {
            match {
                path /api/* /ws/*
            }
            key {remote_host}
            window 10s
            events 100
        }
    }

}

# HTTPS listener for web app and secure API access  
:443, {$DOMAIN:backend.home.local} {
    # TLS with self-signed certificate
    tls internal

    # Security headers for all routes
    header {
        # Defensive security headers
        Strict-Transport-Security "max-age=31536000; includeSubDomains"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "SAMEORIGIN"  # If you need to embed in iframes from same domain
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self' ws: wss:;"
    }

    # API and WebSocket routes
    handle /api/* {
        reverse_proxy backend:{$SERVER_PORT:8080} {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-Port {server_port}
            
            # Trusted proxies
            trusted_proxies private_ranges
        }
    }

    # WebSocket routes
    handle /ws/* {
        reverse_proxy backend:{$SERVER_PORT:8080} {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
            
            # WebSocket configuration
            transport http {
                versions h1 h2c
                keepalive 30s
            }
        }
    }

    # Rate limiting for API and WebSocket  
    rate_limit {
        zone api_zone {
            match {
                path /api/* /ws/*
            }
            key {remote_host}
            window 10s
            events 100
        }
    }

    # Everything else goes to the web app
    handle {
        reverse_proxy web:3000 {
            header_up Host {host}
            header_up X-Real-IP {remote_host}
        }
    }

    # Logging
    log {
        output file /data/caddy/access.log {
            roll_size 10MB
            roll_keep 10
        }
        format json {
            time_format "iso8601"
            message_key "message"
        }
        level INFO
    }
}
